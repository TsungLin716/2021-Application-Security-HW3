In this part, I first looked at the files which showed by Part0.1. I found out that there are three files which include the secrets, they are :

1. GiftcardSite/GiftcardSite/settings.py: the value “SECRET_KEY” which is still remain unsecured since 
HW2.

2. GiftcardSite/k8/django-deploy.yaml: the value “MYSQL_ROOT_PASSWORD” is revealed 

3. db/k8/db-deployment.yaml: the value “MYSQL_ROOT_PASSWORD” is revealed


After discovering these floating secrets, I looked at the document which provided in the instruction to start creating yaml file for these secrets.    

First thing first, I have to covert my secrets to base-64 representation as the document says, I used the following command:

1. echo -n 'thisisatestthing.'| base64

2. echo -n 'kmgysa#fz+9(z1*=c0ydrjizk*7sthm2ga1z4=^61$cxcq8b$l' | base64

After that, I created a yaml file “SecuringSecrets.yaml”    for secrets, I followed the document to edit the “kind” as secret and put my secrets as key in the data section. Also, I configured this yaml file as metadata so it can be passed through other files.

Next, I go to “Django-deploy.yaml” and “db-deployment.yaml” and followed the section “Define container environment variables using Secret data” in the document which stated that we should set up secretkeyRef    so that it can get the key value from “SecuringSecrets.yaml” and store it as environment variable.

Then, I go to the “settings.py” file to change the “SECERT_KEY” value to “os.envion.get(‘SECRET_KEY’) “ to get the value from environment value “SECRET_KEY” which I declared earlier in my yaml file.

Next, I will have to apply the yaml files I added and the yaml files I changed by the following command:


1. kubectl apply -f django-deploy.yaml

2. kubectl apply -f SecuringSecrets.yaml


And then, I want to check that my secrets does exist so I run the following command to check:


1. kubectl get secrets #It does showed that there are two opaque type secrets


At least but not least, I have to delete all the pods to update the deployment and check if they are updated by following command:

1. kubectl delete pods —all

2. kubectl get pods

Finally, I check the environment variables inside the shell of the django deployed machine by the following command: ( They all showed the secrets value so the deployment is successful)

1. kubectl exec -it [Deployed pod name] -- sh

2. echo    $SECRET_KEY

3. echo    $MYSQL_ROOT_PASSWORD






 
